import numpy as np
from numpy.typing import NDArray
from . import csrc


def clip(B: NDArray, x: NDArray) -> NDArray:
    """
    Finds the point in the lattice generated by `B` that is closest to `x`.
    Follows the Algorithm 5 in https://doi.org/10.1109/TIT.2011.2143830.
    Thanks to https://github.com/maflcko/SphereDecoding/blob/master/decode5.m.

    :param B: the generator matrix of the lattice
    :type B: NDArray
    :param x: the vector in the space
    :type x: NDArray
    :return: the closest lattice point in `B` that is closest to `x`
    :rtype: NDArray
    """

    assert B.shape[0] == B.shape[1] == x.shape[0]
    u = np.zeros(x.shape[0], dtype=np.int32)
    csrc.clip(B, x, u)
    return u
